<?xml version="1.0"?>

<launch>

  <arg name="mav_name" default="ardrone" />
  <arg name="namespace" default="$(arg mav_name)"/>

  <group ns="$(arg namespace)">


		<!-- Run MPC controller -->
    <node name="bebop_linear_mpc" pkg="bebop_linear_mpc" type="bebop_linear_mpc_node" respawn="true" clear_params="true" output="screen">
      <remap from="odometry" to="odometry" />
      <rosparam file="$(find bebop_linear_mpc)/resources/linear_mpc_$(arg mav_name).yaml" />
      <rosparam file="$(find bebop_disturbance_observer)/resources/disturbance_observer_$(arg mav_name).yaml"/>
      <param name="verbose" value="true" />
      <param name="use_rc_teleop" value="false" />
      <param name="reference_frame" value="world" />
    </node>


		<!-- Run ardrone odometry publisher -->
		<node pkg="ardrone_gazebo_states" type="ardrone_gazebo_states" name="ardrone_gazebo_states_node" output="screen">
			<remap from="ardrone/odometry" to="odometry" /> 	 
		</node>


		<!-- Launch the trajectory generator -->
		<node name="bebop_waypoint_publisher_node" pkg="bebop_linear_mpc" type="bebop_waypoint_publisher" output="screen" args="$(find bebop_linear_mpc)/resources/waypoints_square_10x10.txt"/>

			<!-- Control inputs normalizer -->		
		<node pkg="control_inputs_normalizer" type="control_inputs_normalizer" name="control_inputs_normalizer_node" respawn="true" clear_params="true" output="screen">
			<rosparam file="$(find control_inputs_normalizer)/params/$(arg mav_name)_scaling_parameters.yaml" command="load" />
			<remap from="/cmd_vel" to="/cmd_vel" /> 	 
		</node>   

		<!-- Publish errors -->
		<node pkg="errors_publisher" type="errors_publisher" name="errors_publisher_node" output="screen"/>						
		 

  </group>


</launch>
